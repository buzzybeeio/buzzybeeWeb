/* eslint max-len: 0 */

import React from 'react';

const introducction = () => (
  <div>
    <img className="narrator-pic" src="profilepics/gloria.jpg" alt="" />
    <h4 className="story-title"><em>Gloria, Software Engineer at QuanticMind</em></h4>
    <p><em>This week we got a chance to interview Gloria Chen. Although Gloria has a CS Degree, her journey to becoming a Software Engineer was not easy. Here is the interview:</em></p>
  </div>
);

const interview = () => (
  <div>
    <p><strong>Can you tell us a little bit about your background?</strong></p>
    <p>“I’m currently a software engineer at QuanticMind. I studied Computer Science and Applied Mathematics at UC Davis and graduated March of 2016. I have worked for a year and half now. I am currently working in backend development and work mostly in Java and Scala and sometimes in Python and in Javascript.”</p>
    <p><strong>Did you choose to learn those languages yourself?</strong></p>
    <p>“We use Java and Scala here at QuanticMind. I learned Java in school and and I learned more Java out of school. When I started working my first job it was a Java shop as well so I just kind of continued my knowledge in Java. When I started working at QuanticMind it was a mix of Scala and Java. There I really learned Scala and Java.”</p>
    <p><strong>Tell me a bit about QuanticMind. What is the company about and how do you like working there?</strong></p>
    <p>“We are an advertising tech company. So we specialize in search engine marketing and optimization. We have an application that allows search engine marketers to optimize their advertising campaigns. In essence, we help with optimizing keyword generators, so as to minimize the amount of money that they spend while maximizing their target revenue goals. We’re currently working on a platform that targets marketers and Chief Marketing Officers and our goal is to become a platform that is a centralized database for all of their marketing needs. Whether it’s data analysis, information about customers, and how their campaigns are doing, we want to be this kind of essential part of being able to manage their marketing campaigns.”</p>
    <p><strong>That sounds like a really cool thing to be doing, and it seems like you really enjoy working there.</strong></p>
    <p>“Yeah, I have really been enjoying working here. I’ve been here for a year and two months now and it’s been amazing - I’ve learned so much here. I’ve been able to learn functional programing from Scala and I’ve been able to understand the objectives and goals of test driven development, learn data science on the side, and be able to work with some really intelligent people to be able to understand how to build scalable and simple applications. I’ve also learned how to manage an application that is monolithic and building it into a microservice-based application. I think what I like the most about working there isn’t really just the text-stack and things that I do at work, but rather the people that I work with. It’s not everyday that you find a team that encourages you to grow as a person and developer. To be able to develop the confidence to be a leader and to be someone that can mentor, that can ask questions, is really awesome. They really foster an environment that encourages learning and encourages asking questions and never feeling afraid.”</p>
    <p><strong>That’s great! I feel that’s something most people struggle with: asking questions openly. You’re leaving yourself kind of vulnerable.</strong></p>
    <p>“Yeah, I definitely agree. I definitely felt afraid of asking questions working at my first job. I was sure about what I was supposed to do but I wasn’t sure about how to ask questions. So coming to QuanticMind and being able to work there and be in that environment, where I don’t have to feel scared to ask questions, has been really great in terms of career growth. And overall just understanding how to ask good questions, like how to phrase a question so I can get the answer that I'm looking for and learning to communicate that, is really useful in the workplace and also in your life. Being able to build up your communication skills in order to figure out what you want to understand and also what the other person wants as well.”</p>
    <p><strong>Since the time of your graduation till now, from any jobs in the tech industry do you feel there were any obstacles that you encountered and how did you overcome them?</strong></p>
    <p>“Since the time of my graduation I noticed that there is a big discrepancy between academia and industry. In academia, you learn a lot about theory and you learn a lot about all these different algorithms and all these different things that you should know like data structures. But I don’t think that the projects you do in school are representative of the things that you do at work. Coming out of school, having my first job, and then having my second job, I felt ‘Wow, I don’t really have the initial experience to know what I’m doing!’. I didn’t know whether or not I’m writing good code, how to write good code, and how to contribute to the team and create a product that customers would want and overall value the bringing that I have for the customer. That was one of the major things that I noticed. But another thing that I noticed was that you also don’t learn how to interview prep and how to look for jobs when you graduate; you don’t know what the technical interview is like because you don’t have that kind of knowledge in school. In academia, you’re really just there to learn as much theory as you can and learn all the fundamentals of computer science without really understanding what kind of job market you’re getting into and how you can apply these skills, what skills you really need, and could you supplement what you know now and what you will need to know when you work in the industry. Like I said before, there’s just a big discrepancy between academia and industry and you have to spend a lot of time to fill in the gaps on your own.</p>
    <p>I spent a lot of time on just figuring out what exactly I’m missing and how can I fill in those gaps.”</p>
    <p><strong>How did manage to fill in those gaps and transition from learning cs in an academic environment to learning it to become more fitted in the industry?</strong></p>
    <p>“What I did first was I actually went through LinkedIn and looked at what skills other people have. I would go there and I would look up all these companies that I was interested in and look at the profiles of Software Engineers that worked there. I would look through the projects that they have, what kind of skills they have, and from there I would look at job listings to see what kind of skills are sought after in the industry: what kind of languages they use and what is their overall text-stack. And from there I would just study by looking up resources online, doing mock interviews, and supplementing my knowledge with different books that I found about different software development practices. I would also look on different software engineering blogs and email Software Engineers with questions: How do I do this? How do I look for jobs in this industry? These are the skills that I have, what did you do to get to where you are today? I would just ask them questions.”</p>
    <p><strong>Did they get back to you?</strong></p>
    <p>“Yeah, actually I have. In the beginning when I first started emailing these people that I found on their blogs and on Github, I thought there’s no way these people are going to mail me back because I’m a new grad and just looking for a job. I was really surprised when I was doing an interview and received this first email back where a Software Engineer gave me a really thorough response about how he got the job he has, what skills he learned, how he went looking for a job and ended up being a Senior Software Engineer at the company. I asked him a couple of technical questions as well (he was an iOS developer) such as: Why did you choose learning Swift over Objective C? What’s the advantage over one language over the other? Is this the language that I should be learning? And he gave some really thorough answers as to why he thought that Swift was a good language to learn over Objective C.</p>
    <p>From there, I would just practice making applications on my own. There are a lot of tutorials and freebies online for making web applications and mobile applications. Getting my hands dirty and learning on my own has been really helpful.”</p>
    <p><strong>How did you get into Computer Science or programming?</strong></p>
    <p>“I started as a Neurobiology major and I was in that major for three and a half years. I had an extra general education class that I needed to fill and my boyfriend at the time told me to take ECS30 (Introduction to Computer Science at UC Davis) and I ended up really liking it. It was just a different way of thinking and problem solving and I really fell in love with it because you kind of have that feeling of ‘What am I supposed to do?’ and all of a sudden it just all makes sense; you have a light bulb that just lights up. And that’s a really great feeling to know that you’re solving such a complicated problem but you can solve it with such a systematic way of thinking.</p>
    <p>I love everything about programming and I love web development. And I just love software engineering.”</p>
    <p><strong>I read your story on your Medium post and when you made the switch to the CS major, your parents were not so happy and supportive about it. How did you manage that change without your parents’ support and how did you overcome that emotional obstacle?</strong></p>
    <p>“I think the hardest part for me was that it was a big hit to my ego. Being told I couldn’t do something was really hard to sit with and I didn’t like the idea that women were inferior to men in any way. Knowing that and feeling that way was what really drove me to prove them wrong. It was really hard to sit with, especially when the first couple of Computer Science classes were really difficult for me, because it was so different. But at the end of the day, deep down I knew that with perseverance, hard work, and grit… anything is possible. I kind of held onto that sentiment as I went through it. That was what kept me going.“</p>
    <p><strong>Do you have any advice for people who are in a similar situation or experiencing something similar? For example, women who are trying to get into tech?</strong></p>
    <p>“I do think it’s a little intimidating, especially in the beginning to be taking your first CS class or getting your first job in tech as well. You might be one of the only girls or the only girl in the room. But I hope that any girl or women will know that they shouldn’t be intimidated at all. I just think that girls are going to run the world one day and this is just the beginning.”</p>
    <p><strong>Last thing, what advice would you give to someone who is trying to transition from a position that’s non-technical or programming- related into this field?</strong></p>
    <p>“The biggest advice that I could give is to not give up. I know software engineering and programming is really different from any other kind of activity that you could do. It might seem very intimidating and really difficult in the beginning, but with everything that you learn it’s always hard in the beginning and over time you learn to see different patterns and understand different paradigm. The best thing that you could do to immerse yourself in software development is to do side projects. Doing side projects have helped me immensely in learning how to code and learning different software engineering paradigms and different design patterns. Like I said earlier, in academia there is a big divide between programming and the technical theory that you learn. So try to apply as much as you know and build what you can, even if it’s a small application in the beginning, you’ll eventually understand how to do it and from there you can just keep going. Look for different problems you could solve and try to solve it by building an application.”</p>
    <p><strong>Where do you see yourself five to ten years from now?</strong></p>
    <p>“That’s a difficult question. I was actually talking to my CEO about this not too long ago. I think my goal is to stay in a technical position; I would want to be an engineering manager or to be a tech lead. I want to be able to help mentor people and to be able to encourage others to learn and grow the same way my VP of Engineering encourages me to grow.I want to be able to give people the opportunity to be a leader and the confidence to be one. I feel so immensely lucky to be able to have managers and VPs that push me out of my comfort zone and I hope that when I become an engineering manager one day that I would be able to do the same and help mentor people the same way.”</p>
    <p><em>For more awesome stories check out our <a href="https://www.facebook.com/buzzybee.io/" target="_blank" rel="noopener noreferrer">facebook</a> and <a href="https://medium.com/@buzzybeeio" target="_blank" rel="noopener noreferrer">medium</a> page!</em></p>
  </div>
);

export default { introducction, interview };
